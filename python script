import numpy as np
import pickle
import pandas as pd
import os
from flask import Flask, request, render_template

app = Flask(__name__)

# Load the model and scaler from their respective .pkl files
model = pickle.load(open(r"C:\Users\USER\Downloads\traffic_model.pkl", "rb"))
scaler = pickle.load(open(r"C:\Users\USER\Downloads\traffic_scaler.pkl", "rb"))

@app.route('/')
def home():
    return render_template('index.html')

@app.route('/predict', methods=["POST"])
def predict():
    try:
        input_feature = [float(x) for x in request.form.values()]
        features_values = [np.array(input_feature)]
        names = ['holiday', 'temp', 'rain', 'snow', 'weather', 'year',
                 'month', 'day', 'hours', 'minutes', 'seconds']
        
        data = pd.DataFrame(features_values, columns=names)
        scaled_data = scaler.transform(data)
        prediction = model.predict(scaled_data)

        text = "Estimated Traffic Volume is : "
        return render_template("index.html", prediction_text=text + str(int(prediction[0])))

    except Exception as e:
        return render_template("index.html", prediction_text=f"Error occurred: {str(e)}")

if __name__ == "__main__":
    port = int(os.environ.get('PORT', 5000))
    app.run(port=port, debug=True, use_reloader=False)
